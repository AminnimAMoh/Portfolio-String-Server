{"version":3,"file":"txsrc_views_Pages_D3_index_tsx.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAMA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AASA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA","sources":["webpack://mamp-frontend/./txsrc/views/Pages/D3/index.tsx"],"sourcesContent":["import React, { useRef, useMemo, useEffect, useState, memo } from \"react\";\r\nimport { select, Selection } from \"d3-selection\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchAnnualrainData,\r\n  fetchSlumsData,\r\n  fetchPopulationData,\r\n  fetchMonthData,\r\n  fetchMap,\r\n} from \"../../../redux/slices/fetchSlice\";\r\nimport { RootState } from \"../../../store\";\r\n\r\nfunction D3(): React.ReactElement {\r\n  const {\r\n    dataStore: { annualrain, slums, population, months, mapJSON, refresh },\r\n  } = useSelector((state: RootState) => state);\r\n  const dispatch = useDispatch();\r\n  const svgRef = useRef<SVGSVGElement | null>(null);\r\n  const [svgSetupTrigger, setSVGSetupTrigger] = useState<boolean>(false);\r\n\r\n  const [svg, setSvg] = useState<null | Selection<\r\n    SVGSVGElement | null,\r\n    unknown,\r\n    null,\r\n    undefined\r\n  >>(null);\r\n\r\n  useMemo(() => {\r\n    if (annualrain.state === \"empty\") dispatch(fetchAnnualrainData());\r\n    if (slums.state === \"empty\") dispatch(fetchSlumsData());\r\n    if (population.state === \"empty\") dispatch(fetchPopulationData());\r\n    if (months.state === \"empty\") dispatch(fetchMonthData());\r\n    if (mapJSON.state === \"empty\") dispatch(fetchMap());\r\n  }, [\r\n    refresh,\r\n    JSON.stringify(annualrain.state),\r\n    JSON.stringify(slums.state),\r\n    JSON.stringify(population.state),\r\n    JSON.stringify(months.state),\r\n    JSON.stringify(mapJSON.state),\r\n    dispatch,\r\n  ]);\r\n\r\n  useMemo(() => {\r\n    annualrain.state === \"fulfilled\" &&\r\n      slums.state === \"fulfilled\" &&\r\n      population.state === \"fulfilled\" &&\r\n      months.state === \"fulfilled\" &&\r\n      mapJSON.state === \"fulfilled\" &&\r\n      setSVGSetupTrigger(true);\r\n  }, [\r\n    JSON.stringify(annualrain.state),\r\n    JSON.stringify(slums.state),\r\n    JSON.stringify(population.state),\r\n    JSON.stringify(months.state),\r\n    JSON.stringify(mapJSON.state),\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    !svg && svgSetupTrigger && setSvg(select(svgRef.current));\r\n    if (annualrain.data.length > 0 && svg) {\r\n      import(/* webpackChunkName: 'D3-Draw' */ \"./Draw\").then(\r\n        ({ default: Draw }) => {\r\n          Draw(\r\n            svg,\r\n            svgRef,\r\n            annualrain,\r\n            slums,\r\n            population,\r\n            months,\r\n            mapJSON.data\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }, [svg, svgSetupTrigger, annualrain, slums, population, months]);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n      <svg style={{ width: \"100%\", height: \"100%\" }} ref={svgRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(D3);\r\n"],"names":[],"sourceRoot":""}