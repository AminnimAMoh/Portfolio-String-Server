{"version":3,"file":"txsrc_App_tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAIA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;AC9FA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAYA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAaA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAGA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;AC5GA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AC5HA;AAEA;AACA;AACA;AAMA;AACA;AAQA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAEA;AAGA;AAKA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAaA;AANA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAIA;AAEA;;;;;;;;;;;;;;;ACrvMA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAKA;AAEA;;;;;;;;;;;;;;;AChBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://mamp-frontend/./txsrc/App.tsx","webpack://mamp-frontend/./txsrc/AppStyle.tsx","webpack://mamp-frontend/./txsrc/views/ContentContainer/index.tsx","webpack://mamp-frontend/./txsrc/views/ContentContainer/style.tsx","webpack://mamp-frontend/./txsrc/views/MenuButton/index.tsx","webpack://mamp-frontend/./txsrc/views/MenuButton/style.tsx","webpack://mamp-frontend/./txsrc/views/Pages/Undeveloped/index.tsx","webpack://mamp-frontend/./txsrc/views/Pages/styles.tsx"],"sourcesContent":["//This is the 'majula'. Dark Souls fans are familiar with this place. ðŸ˜…\r\n//Here we managing the main states.\r\n\r\nimport React, { memo, useMemo, useState } from \"react\";\r\n\r\nimport useStyle from \"./AppStyle\";\r\nimport { Snackbar, Slide } from \"@material-ui/core\";\r\n\r\n//Importing the redux store type.\r\nimport { RootState } from \"./store\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { rowGridToggleToReverce } from \"./redux/slices/ScreenSettingsSlice\";\r\nimport { readDataAgain } from \"./redux/slices/fetchSlice\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\n\r\n\r\nimport MenuButton from \"./views/MenuButton\";\r\nimport ContentContainer from \"./views/ContentContainer\";\r\n\r\nconst DataFetchPending=React.lazy(()=>import(\"./views/DataFetchPending\"));\r\n\r\n//An easy way to apply transitions to Material-UI components.\r\n//Pre writen transition from Material-UI.\r\n//I could write it my self, just to show off some gadgeta. ðŸ˜‰\r\nfunction TransitionUp(props: any | undefined | null) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction App(): React.ReactElement {\r\n  // console.clear();\r\n  const [svgSetupTrigger, setSVGSetupTrigger] = useState<boolean>(false);\r\n  const [snackState, setSnackState] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  const windowState=useMediaQuery(\"(max-width:1280px)\")\r\n\r\n  const {\r\n    buttonAction: { rootState, buttonTrigered },\r\n    dataStore: { annualrain, slums, population, months },\r\n  } = useSelector((state: RootState) => state);\r\n  const classes = useStyle();\r\n\r\n  useMemo(() => {\r\n      if (windowState) {\r\n        dispatch(rowGridToggleToReverce(window.innerWidth));\r\n      }\r\n  }, [windowState]);\r\n\r\n  useMemo(() => {\r\n    annualrain.state === \"fulfilled\" &&\r\n      slums.state === \"fulfilled\" &&\r\n      population.state === \"fulfilled\" &&\r\n      months.state === \"fulfilled\" &&\r\n      setSVGSetupTrigger(true);\r\n\r\n    (annualrain.state === \"rejected\" ||\r\n      slums.state === \"rejected\" ||\r\n      population.state === \"rejected\" ||\r\n      months.state === \"rejected\") &&\r\n      setSnackState(true);\r\n  }, [annualrain.state, slums.state, population.state, months.state]);\r\n\r\n  //This function controles click action on the snack bar.\r\n  const snackBarRefreshAction = () => {\r\n    //First we set the 'refresh state of the 'fetchSlice' action to trigger the fetch\r\n    //action on the asyncThunk function with state 'rejected'.\r\n    //In this case only the rejected API will be called, not the rest. ðŸ¤¯\r\n    //More detail at 'fetchSlice.tsx'.\r\n    dispatch(readDataAgain());\r\n    //Close the snack bar.\r\n    setSnackState(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={rootState ? `${classes.root} open` : `${classes.root} close`}\r\n    >\r\n      {!svgSetupTrigger && buttonTrigered === \"D3\" && (\r\n        <div className={classes.loading}>\r\n            <DataFetchPending />\r\n        </div>\r\n      )}\r\n      <Snackbar\r\n        open={snackState}\r\n        TransitionComponent={TransitionUp}\r\n        message={`Failed to fetch data. Click here to try again.`}\r\n        onClick={snackBarRefreshAction}\r\n        classes={{ root: classes.snackbar }}\r\n      />\r\n      <MenuButton />\r\n      <ContentContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(App);\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => createStyles({\r\n    root: {\r\n      height: \"100vh\",\r\n      display: \"flex\",\r\n      flexFlow: \"row-reverse\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        flexFlow: \"column\",\r\n      },\r\n      \"&.open\": {\r\n        paddingRight: theme.spacing(20),\r\n        [theme.breakpoints.down(\"md\")]: {\r\n          paddingRight: theme.spacing(0),\r\n        },\r\n      },\r\n      \"&.close\": {\r\n        paddingRight: 0,\r\n      },\r\n    },\r\n    landinginfo: {\r\n      position: \"absolute\",\r\n    },\r\n    Splash: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: theme.spacing(6),\r\n      color: \"white\",\r\n    },\r\n    loading: {\r\n      width: \"100%\",\r\n      position: \"absolute\",\r\n      top: 0,\r\n      zIndex: 1,\r\n    },\r\n    snackbar:{\r\n      cursor: 'pointer',\r\n      // background: 'red',\r\n      '& >*':{\r\n        background: '#9c3c41',\r\n      }\r\n    }\r\n  }));\r\n\r\n  export default useStyle","import React, { useRef } from \"react\";\r\nimport useStyle from \"./style\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\n// import UX from \"../Pages/UX\";\r\n// import UI from \"../Pages/UI\";\r\n// import CV from \"../Pages/CV\";\r\n\r\nconst UX = React.lazy(()=>import(\"../Pages/UX\"));\r\nconst UI = React.lazy(()=>import(\"../Pages/UI\"));\r\nconst CV = React.lazy(()=>import(\"../Pages/CV\"));\r\nconst D3=React.lazy(()=>import(\"../Pages/D3\"));\r\n\r\n// import D3 from \"../Pages/D3\";\r\nimport Undeveloped from \"../Pages/Undeveloped\";\r\n\r\nfunction RenderObject(state: any): React.ReactElement {\r\n  switch (state.state) {\r\n    case \"UX\":\r\n      return <UX />;\r\n    case \"UI\":\r\n      return <UI />;\r\n    case \"CV\":\r\n      return <CV />;\r\n    case \"D3\":\r\n      return <D3 />;\r\n    default:\r\n      return <Undeveloped />;\r\n  }\r\n}\r\n\r\nfunction ContentContainer(): React.ReactElement {\r\n  const classes = useStyle();\r\n  const rootDetails = useRef<HTMLDivElement>(null);\r\n  const scrollToTop = useRef<HTMLDivElement>(null);\r\n  const handleScroll = () => {\r\n    rootDetails.current &&\r\n    scrollToTop.current &&\r\n    rootDetails.current.scrollTop > 800\r\n      ? (scrollToTop.current.style.transform =\r\n          window.innerWidth > 1280\r\n            ? \"translateY(-15px) scale(1)\"\r\n            : \"translateY(-75px) scale(1)\")\r\n      : scrollToTop.current &&\r\n        (scrollToTop.current.style.transform =\r\n          window.innerWidth > 1280\r\n            ? \"translateY(-15px) scale(0)\"\r\n            : \"translateY(-75px) scale(1)\");\r\n  };\r\n\r\n  const handleClick = () => {\r\n    rootDetails.current?.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const {\r\n    buttonAction: { rootState, delayState, renderPage },\r\n    screenAction: { screenState },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  return (\r\n    <div\r\n      onScroll={handleScroll}\r\n      ref={rootDetails}\r\n      className={\r\n        rootState && screenState === \"wide\"\r\n          ? `${classes.root} open`\r\n          : rootState && screenState === \"limited\"\r\n          ? `${classes.root} open_vertically`\r\n          : !rootState && delayState && screenState === \"wide\"\r\n          ? `${classes.root} close`\r\n          : !rootState && delayState && screenState === \"limited\"\r\n          ? `${classes.root} close_vertically`\r\n          : screenState === \"limited\"\r\n          ? `${classes.root} close_vertically`\r\n          : classes.root\r\n      }\r\n      style={\r\n        rootState && !delayState && screenState === \"wide\"\r\n          ? { width: \"100%\" }\r\n          : !rootState && delayState && screenState === \"wide\"\r\n          ? { width: \"0%\" }\r\n          : rootState && !delayState && screenState === \"limited\"\r\n          ? { height: \"100%\" }\r\n          : !rootState && delayState && screenState === \"limited\"\r\n          ? { height: \"0%\" }\r\n          : {}\r\n      }\r\n    >\r\n      <div\r\n        ref={scrollToTop}\r\n        className={classes.scrollToTop}\r\n        onClick={handleClick}\r\n      >\r\n        <div />\r\n      </div>\r\n      <img\r\n        src=\"images/Containers/Content_Frame/Mobile.png\"\r\n        alt=\"content\"\r\n        className={classes.MobileFrame}\r\n      />\r\n      <RenderObject state={renderPage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentContainer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst mytheme = {\r\n  radius: 80,\r\n};\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    opacity: 1,\r\n    transform: \"translateX(-150%)\",\r\n    transition:\r\n      \"transform 1s ease-in-out .5s, width .5s ease, height .5s ease, padding .5s ease, opacity .5s ease .5s\",\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n    direction: \"rtl\",\r\n    backgroundImage:\r\n      \"url(images/Containers/Content_Frame/Page-Frame-Light-Wave.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"right\",\r\n    padding: theme.spacing(12, 41, 12, 6),\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      padding: theme.spacing(12, 40, 0, 6),\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      backgroundImage: \"none\",\r\n      padding: theme.spacing(0, 6, 12),\r\n    },\r\n    \"&.open\": {\r\n      transform: \"translateX(0%)\",\r\n    },\r\n    \"&.open_vertically\": {\r\n      transform: \"translateY(0%)\",\r\n    },\r\n    \"&.close_vertically\": {\r\n      transform: \"translate(0%, 100%)\",\r\n      padding: 0,\r\n      opacity: 0,\r\n    },\r\n    \"&.close\": {\r\n      padding: 0,\r\n      opacity: 0,\r\n    },\r\n  },\r\n  MobileFrame: {\r\n    display: \"none\",\r\n    position: \"sticky\",\r\n    height: \"auto\",\r\n    top: \"-5px\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  scrollToTop: {\r\n    position: \"sticky\",\r\n    top: \"100%\",\r\n    right: \"0%\",\r\n    transform: \"translateY(-15px) scale(0)\",\r\n    width: mytheme.radius,\r\n    height: mytheme.radius,\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n    transition: \"transform .5s ease-in-out\",\r\n    [theme.breakpoints.down('md')]:{\r\n      transform: \"translateY(-35px) scale(0)\",\r\n    },\r\n    \"& >div\": {\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundImage: \"url(images/Button/ScrollToTop/Top.png)\",\r\n      backgroundPosition: \"center\",\r\n      backgroundSize: \"contain\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      zIndex: 1,\r\n      \"&::before\": {\r\n        content: '\"\"',\r\n        display: \"block\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: \"#12393D\",\r\n        opacity: .8,\r\n        borderRadius: \"50%\",\r\n        width: mytheme.radius,\r\n        height: mytheme.radius,\r\n        filter: 'blur(15px)',\r\n        zIndex: -2,\r\n        transition: 'transform .5s ease-in-out, background-color 1s ease-in'\r\n      },\r\n      '&::after':{\r\n        content: '\"\"',\r\n        display: 'block',\r\n        position: 'absolute',\r\n        top: '-1%', \r\n        bottom: 0, \r\n        left: 0, \r\n        right: '-1%',\r\n        width: '102%',\r\n        height: '102%',\r\n        background: 'linear-gradient(163deg, rgba(156,60,65,1) 0%, rgba(18,57,61,1) 100%)',\r\n        borderRadius: '50%',\r\n        zIndex: -1,\r\n        transition: 'transform .5s ease-in-out .5s',\r\n        '-webkit-transition' : '-webkit-filter 500ms linear, -webkit-transform .5s ease-in-out .5s'\r\n      }\r\n    },\r\n    '&:hover, &:focus':{\r\n      '&>div::before':{\r\n        transform: 'scale(1.5)',\r\n        backgroundColor: \"#9C3C41\",\r\n      },\r\n      '&>div::after':{\r\n        transform: 'scale(1.1)',\r\n        filter: 'blur(1.5px)',\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\nexport default useStyle;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { RootState } from \"../../store\";\r\nimport useStyle from \"./style\";\r\nimport useMeasure from \"react-use-measure\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch } from \"../../store\";\r\n\r\nimport {\r\n  containerStateToggle,\r\n  onDelayStateChange,\r\n  // addButtonsPosition\r\n} from \"../../redux/slices/buttonActionSlice\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\n\r\ninterface mediaQueries {\r\n  rootState: boolean;\r\n  phase: boolean;\r\n}\r\n\r\n// import { Positions } from \"./types\";\r\n// import { Typography } from \"@material-ui/core\";\r\n\r\nconst calPos = (\r\n  index: number,\r\n  length: number,\r\n  size: number,\r\n  state: boolean,\r\n  windowState: mediaQueries\r\n) => {\r\n  if (windowState.rootState) {\r\n    const inc = state ? 1.5 : 3;\r\n    const rad = size / inc;\r\n    const angle = ((2 * Math.PI) / length) * index;\r\n    const x = rad * Math.cos(angle);\r\n    const y = rad * Math.sin(angle);\r\n    return { x, y };\r\n  } else {\r\n    const phase = windowState.phase ? 8 : 20;\r\n    const inc = state ? 3 : 30;\r\n    const angle = ((Math.PI * 2) / length + 2) * index;\r\n    const rad = size / inc;\r\n    const x = rad * 5 * Math.cos(angle) + 5 * (rad * Math.sin(angle)) - phase;\r\n    const y = 0;\r\n    return { x, y };\r\n  }\r\n};\r\nfunction MenuButton(): React.ReactElement {\r\n  const classes = useStyle();\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const windowState = {\r\n    rootState: useMediaQuery(\"(min-width:1280px)\"),\r\n    phase: useMediaQuery(\"(max-width:560px)\"),\r\n  };\r\n\r\n  // const [showInfo, setShowInfo] = useState<boolean>(false);\r\n  // const [buttonPositions, setButtonsPosition] = useState<Positions[]>([\r\n  //   { x: 0, y: 0 },\r\n  // ]);\r\n  const parentElement = useRef<HTMLDivElement>(null);\r\n  const {\r\n    buttonAction: { rootState, delayState, data },\r\n    screenAction: { screenState },\r\n  } = useSelector((state: RootState) => state);\r\n  const [buttonMesures, { width }] = useMeasure();\r\n  const [powerState, setPowerState] = useState<boolean>(false);\r\n  const buttonSizing = width;\r\n\r\n  // useEffect(() => {\r\n  //   buttonSizing > 0 &&\r\n  //     data.map(\r\n  //       ({ name, img }: { name: string; img: string }, index: number) => {\r\n  //         // console.log(index);\r\n  //         const { x, y } = calPos(index, data.length, buttonSizing, powerState);\r\n  //         setButtonsPosition((preState) => {\r\n  //           return [...preState, { x, y }];\r\n  //         });\r\n  //       }\r\n  //     );\r\n  // }, [buttonSizing]);\r\n  // console.log(buttonPositions);\r\n\r\n  const handlePowerClick = () => {\r\n    const parentChilrdernLength = parentElement.current?.childElementCount;\r\n    const prentArray = parentElement.current?.children;\r\n    if (parentChilrdernLength && prentArray) {\r\n      for (let i = 1; i < parentChilrdernLength; i++) {\r\n        prentArray[i].children[0].classList.remove(\"focused\");\r\n      }\r\n    }\r\n    if (rootState) {\r\n      dispatch(containerStateToggle(\"PowerButton\"));\r\n      setTimeout(() => {\r\n        dispatch(onDelayStateChange());\r\n      }, 500);\r\n    } else {\r\n      setPowerState(() => !powerState);\r\n    }\r\n  };\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    const payload = e.currentTarget.id;\r\n    const parentChilrdernLength = parentElement.current?.childElementCount;\r\n    const prentArray = parentElement.current?.children;\r\n    if (parentChilrdernLength && prentArray) {\r\n      for (let i = 1; i < parentChilrdernLength; i++) {\r\n        prentArray[i].children[0].id === payload\r\n          ? prentArray[i].children[0].classList.add(\"focused\")\r\n          : prentArray[i].children[0].classList.remove(\"focused\");\r\n      }\r\n    }\r\n    dispatch(containerStateToggle(payload));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      ref={parentElement}\r\n      style={\r\n        screenState === \"wide\" && !rootState && !delayState\r\n          ? { paddingRight: 0 }\r\n          : screenState === \"limited\" && !rootState\r\n          ? { paddingTop: 0 }\r\n          : {}\r\n      }\r\n    >\r\n      <div\r\n        className={\r\n          powerState\r\n            ? `${classes.powerButton} open`\r\n            : `${classes.powerButton} close`\r\n        }\r\n        onClick={handlePowerClick}\r\n        // onMouseOver={() => setShowInfo(true)}\r\n        // onMouseOut={() => setShowInfo(false)}\r\n      >\r\n        <img\r\n          ref={buttonMesures}\r\n          src=\"images/Button/Menu_Trigger/Power_Button-Stoke.png\"\r\n          alt=\"content-asset\"\r\n        />\r\n      </div>\r\n\r\n      {data.map(\r\n        (\r\n          {\r\n            name,\r\n            img,\r\n            toolKit,\r\n            info,\r\n          }: { name: string; img: string; toolKit: string; info: string },\r\n          index: number\r\n        ) => {\r\n          const { x, y } = calPos(\r\n            index,\r\n            data.length,\r\n            buttonSizing,\r\n            powerState,\r\n            windowState\r\n          );\r\n          return (\r\n            <div\r\n              key={name}\r\n              className={classes.buttonContainers}\r\n              style={{ transform: `translate(${x}px, ${y}px)` }}\r\n            >\r\n              {/* {info != \"\" && (\r\n                <div className={classes.introTexts_container}>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    className={\r\n                      showInfo && !powerState\r\n                        ? `${classes.introTexts_text} open`\r\n                        : `${classes.introTexts_text} close`\r\n                    }\r\n                  >\r\n                    {info}\r\n                  </Typography>\r\n                </div>\r\n              )} */}\r\n              <div\r\n                id={name}\r\n                className={classes.iconButtons}\r\n                style={{\r\n                  width: buttonSizing / 4,\r\n                  height: buttonSizing / 4,\r\n                  backgroundImage: `url(${img})`,\r\n                }}\r\n                onClick={(e) => handleClick(e)}\r\n              ></div>\r\n            </div>\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuButton;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"20%\",\r\n    zIndex: 1,\r\n    transition: \"transform 1s ease-in\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n      height: \"20%\",\r\n      paddingTop: theme.spacing(15),\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingTop: theme.spacing(7),\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingTop: theme.spacing(1),\r\n    },\r\n  },\r\n  powerButton: {\r\n    cursor: \"pointer\",\r\n    zIndex: 2,\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"18%\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"25%\",\r\n    },\r\n    \"&>img\": {\r\n      width: \"100%\",\r\n      // minWidth: \"30%\",\r\n    },\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      zIndex: -1,\r\n      top: \"10%\",\r\n      bottom: 0,\r\n      left: \"10%\",\r\n      right: 0,\r\n      width: \"80%\",\r\n      height: \"80%\",\r\n      borderRadius: \"50%\",\r\n      opacity: 1,\r\n      filter: \"blur(10px)\",\r\n      transition:\r\n        \"background-color 1s cubic-bezier(0, 1.51, 0.12, -0.29), -webkit-filter 2000ms cubic-bezier(0, 1.51, 0.12, -0.29)\",\r\n    },\r\n    \"&.open\": {\r\n      \"&::before\": {\r\n        filter: \"blur(15px)\",\r\n        transform: \"scale(1.05)\",\r\n        backgroundColor: \"#12393D\",\r\n      },\r\n    },\r\n    \"&.close\": {\r\n      \"&::before\": {\r\n        filter: \"blur(5px)\",\r\n        backgroundColor: \"#E4E5E7\",\r\n      },\r\n    },\r\n  },\r\n  menuButtons: {\r\n    position: \"absolute\",\r\n  },\r\n  buttonContainers: {\r\n    position: \"absolute\",\r\n    transition: \"transform 1s ease-in-out\",\r\n  },\r\n  iconButtons: {\r\n    position: \"relative\",\r\n    backgroundSize: \"contain\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n    \"&:hover, &:focus\": {\r\n      \"&::after\": {\r\n        transform: \"rotate(180deg) scale(1.1)\",\r\n        filter: \"blur(3px)\",\r\n      },\r\n      \"&::before\": {\r\n        transform: \"scale(1.2)\",\r\n        background: \"rgba(18,57,61,.2)\",\r\n      },\r\n    },\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      right: 0,\r\n      bottom: 0,\r\n      left: \"0\",\r\n      zIndex: -1,\r\n      borderRadius: \"inherit\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      transform: \"scale(1.05)\",\r\n      background:\r\n        \"linear-gradient(155deg, rgba(122,145,147,1) 0%, rgba(6,22,33,1) 100%)\",\r\n      transition: \"transform .5s ease-in, filter 500ms linear\",\r\n      \"-webkit-transition\":\r\n        \"-webkit-filter 500ms linear, -webkit-transform .5s ease-in\",\r\n    },\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      top: \"-1px\",\r\n      right: 0,\r\n      bottom: 0,\r\n      left: \"-1px\",\r\n      zIndex: -2,\r\n      borderRadius: \"inherit\",\r\n      background: \"rgba(0,0,0,.5)\",\r\n      filter: \"blur(12px)\",\r\n      transition: \"transform .2s ease-in-out\",\r\n    },\r\n    \"&.focused\": {\r\n      \"&::before\": {\r\n        transform: \"scale(1.2)\",\r\n        filter: \"blur(12px)\",\r\n        background: \"rgba(18,57,61,1)\",\r\n      },\r\n    },\r\n  },\r\n  textOnPath: {\r\n    position: \"absolute\",\r\n    \"&>path\": {\r\n      transform: \"translate(-693.7247px, -269.9313px)\",\r\n      // fill: 'transparent',\r\n    },\r\n    \"&>text\": {\r\n      fill: \"white\",\r\n    },\r\n  },\r\n  introTexts_container: {\r\n    position: \"absolute\",\r\n    width: \"max-content\",\r\n    transform: \"translate(0, -50%)\",\r\n    top: \"50%\",\r\n    left: \"100%\",\r\n    paddingLeft: theme.spacing(2),\r\n    zIndex: -3,\r\n  },\r\n  introTexts_text: {\r\n    position: \"relative\",\r\n    zIndex: 0,\r\n    display: 'block',\r\n    color: '#e4e5e7',\r\n    padding: theme.spacing(1, 1, 1, 2),\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      // backgroundColor: \"#e4e5e7\",\r\n      position: \"absolute\",\r\n      top: 0,\r\n      bottom: 0,\r\n      left: \"-40%\",\r\n      right: 0,\r\n      zIndex: -3,\r\n      borderRadius: '6px'\r\n    },\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      backgroundColor: \"#061621\",\r\n      position: \"absolute\",\r\n      transform: \"scale(1.1)\",\r\n      top: 0,\r\n      bottom: 0,\r\n      left: \"-30%\",\r\n      right: 0,\r\n      zIndex: 1,\r\n      transition: 'width 1s ease-in-out 1.1s, transform 1s ease-in-out'\r\n    },\r\n    \"&.open\": {\r\n      \"&::after\": {\r\n        width: 0,\r\n        transform: 'translateX(100%) scale(1.1)',\r\n      },\r\n    },\r\n    \"&.close\": {\r\n      \"&::after\": {\r\n        width: '130%',\r\n        transform: 'translateX(0) scale(1.1)'\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyle;\r\n","import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport useStyle from '../styles'\r\n\r\n\r\nfunction Undeveloped(): React.ReactElement {\r\n    const classes=useStyle();\r\n    return (\r\n        <div>\r\n            <Typography variant='h3' className={classes.topick_heading}>\r\n                This page is temporary unavailable.\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Undeveloped\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexFlow: \"row-reverse\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    transition: \"transform 1s ease-in\",\r\n    marginLeft: 0,\r\n    marginRight: \"auto\",\r\n    direction: \"ltr\",\r\n  },\r\n  topic_grid: {\r\n    color: \"white\",\r\n    '& > .MuiGrid-item img': {\r\n      width: '100%'\r\n    },\r\n    '&>*': {\r\n      padding: theme.spacing(4)\r\n    },\r\n    '&>*:nth-child(n+4)': {\r\n      paddingTop: theme.spacing(20)\r\n    },\r\n  },\r\n  topick_heading: {\r\n    color: \"white\",\r\n    \"& >*:not(:first-child)\": {\r\n      paddingTop: \"8px\",\r\n    },\r\n  },\r\n  onlineLink: {},\r\n  link_ToExternals: {\r\n    color: \"#5C3B42\",\r\n  },\r\n  inner_GridContainer: {\r\n    '& > *': {\r\n      paddingTop: theme.spacing(10)\r\n    }\r\n  },\r\n  topic_pragraph: {},\r\n  video_container:{\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    zIndex: -1,\r\n  },\r\n  video_root: {\r\n    width: '100%',\r\n    position: 'relative',\r\n  },\r\n  video_responsive: {\r\n    overflow: 'hidden',\r\n    /* 16:9*/\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  divider:{\r\n    backgroundColor: 'white !important'\r\n  }\r\n}));\r\n\r\nexport default useStyle;\r\n"],"names":[],"sourceRoot":""}