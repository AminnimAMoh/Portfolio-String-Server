{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAGA;AACA;;AACA;;;AAGA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAKA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAEA;AAEA;AADA;AAIA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAWA;;AAEA;;;;;;;;;;;;;;;;ACzGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAfA;AAmBA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AADA;AAHA;AApCA;AA6CA;;;;;;;;;;;;;;;;AC/CA;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;;AAMA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACxBA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAPA;AAHA;AAcA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;ACxBA;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAEA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAEA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AALA;AA/CA;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AACA;AACA;AACA;AAEA;AAEA;;;AAfA;AAHA;AAsBA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAlBA;AA0BA;;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAEA;AACA;AAEA;AAFA;AAHA;AAQA;AAEA;AAEA;AACA;AAEA;AACA;AAHA;AAHA;AASA;AAEA;AAEA;AACA;AAEA;AACA;AAHA;AAKA;AARA;AAUA;AAGA;AAEA;AACA;AAEA;AAFA;AAHA;AAQA;AAEA;AAEA;AACA;AAEA;AACA;AAHA;AAHA;AASA;AAEA;AAEA;AACA;AAEA;AACA;AAHA;AAKA;AARA;AAUA;AAGA;AAEA;AACA;AAEA;AACA;AAHA;AAHA;AASA;AAEA;AAEA;AACA;AAEA;AACA;AAHA;AAHA;AASA;AAEA;AAEA;AACA;AAEA;AACA;AAHA;AAKA;AARA;AAUA;AAGA;AAEA;AACA;AAEA;AAFA;AAHA;AAQA;AAEA;AAEA;AACA;AAEA;AACA;AAHA;AAHA;AASA;AAEA;AAEA;AACA;AAEA;AACA;AAHA;AAKA;AARA;AAUA;AACA;AAlJA;AAqJA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACvRA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AADA;AAUA;;AAEA;;;;;;;;;;;;;;AClBA;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AAVA;AAYA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AAYA;;AAEA;AAAA;;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAKA;AAEA;AACA;AACA;AAaA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAxBA;AA6BA;AACA;AACA;AAHA;AAQA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;;AAEA;;;;;;;;;;;;;;;;ACtGA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAlCA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAzBA;AA0CA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAvDA;AAlDA;AAsHA;;;;;;;;;;;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAVA;;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AALA;AAYA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAEA;AACA;AACA;AAGA;;;AAYA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAMA;AACA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AAGA;AACA;;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAPA;AAYA;AAKA;AAEA;;AARA;AAWA;AACA;AACA;AAHA;AAUA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AARA;AAYA;AAIA;;AAEA;;;;;;;;;;;;;;;;ACtMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AAFA;AADA;AAvCA;AA8CA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAhBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AAHA;AADA;AAlDA;AA0DA;AACA;AACA;AACA;;AADA;AAIA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAFA;AADA;AArCA;AAxJA;AAsMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;;;;;AAEA;AACA;AAEA;AAQA;AAQA;;AAKA;AACA;AACA;;AAEA;AAIA;AACA;AACA;;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AAAA;AAAA;AAAA;AAFA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAMA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACxQA;AACA;;;;AAEA;;AAEA;AACA;;AACA;;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAeA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAcA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/RA;AACA;;;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;;AAGA;;AAKA;AACA;AAAA;AAEA;AADA;AAGA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAYA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAaA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAKA;AAAA;AAMA;AAAA;AAMA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAOA;AACA;AAFA;AAUA;;AAEA;;;;;;;;;;;;;;;;;;;;AC5PA;AACA;;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAKA;;AAEA;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAaA;;AAEA;;;;;;;;;;;;;;;;AC9BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAxDA;AA6DA;;;;;;;;;;AC/DA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AADA;AAIA;AAEA;AAAA;AACA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://andramedian-design/./txsrc/App.tsx","webpack://andramedian-design/./txsrc/AppStyle.tsx","webpack://andramedian-design/./txsrc/axiosInterceptor.tsx","webpack://andramedian-design/./txsrc/redux/slices/ScreenSettingsSlice.tsx","webpack://andramedian-design/./txsrc/redux/slices/buttonActionSlice.tsx","webpack://andramedian-design/./txsrc/redux/slices/fetchSlice.tsx","webpack://andramedian-design/./txsrc/store.tsx","webpack://andramedian-design/./txsrc/utils.tsx","webpack://andramedian-design/./txsrc/views/ContentContainer/index.tsx","webpack://andramedian-design/./txsrc/views/ContentContainer/style.tsx","webpack://andramedian-design/./txsrc/views/DataFetchPending/index.tsx","webpack://andramedian-design/./txsrc/views/MenuButton/index.tsx","webpack://andramedian-design/./txsrc/views/MenuButton/style.tsx","webpack://andramedian-design/./txsrc/views/Pages/CV/index.tsx","webpack://andramedian-design/./txsrc/views/Pages/UI/index.tsx","webpack://andramedian-design/./txsrc/views/Pages/UX/index.tsx","webpack://andramedian-design/./txsrc/views/Pages/Undeveloped/index.tsx","webpack://andramedian-design/./txsrc/views/Pages/YouTubeEmbed/index.tsx","webpack://andramedian-design/./txsrc/views/Pages/styles.tsx","webpack://andramedian-design/external \"@material-ui/core/Divider\"","webpack://andramedian-design/external \"@material-ui/core/Grid\"","webpack://andramedian-design/external \"@material-ui/core/LinearProgress\"","webpack://andramedian-design/external \"@material-ui/core/Link\"","webpack://andramedian-design/external \"@material-ui/core/Slide\"","webpack://andramedian-design/external \"@material-ui/core/Snackbar\"","webpack://andramedian-design/external \"@material-ui/core/Typography\"","webpack://andramedian-design/external \"@material-ui/core/styles\"","webpack://andramedian-design/external \"@material-ui/core/useMediaQuery\"","webpack://andramedian-design/external \"@reduxjs/toolkit\"","webpack://andramedian-design/external \"axios\"","webpack://andramedian-design/external \"express\"","webpack://andramedian-design/external \"react\"","webpack://andramedian-design/external \"react-dom/server\"","webpack://andramedian-design/external \"react-redux\"","webpack://andramedian-design/external \"react-use-measure\"","webpack://andramedian-design/external \"reload\"","webpack://andramedian-design/webpack/bootstrap","webpack://andramedian-design/webpack/runtime/compat get default export","webpack://andramedian-design/webpack/runtime/define property getters","webpack://andramedian-design/webpack/runtime/hasOwnProperty shorthand","webpack://andramedian-design/webpack/runtime/make namespace object","webpack://andramedian-design/./txsrc/server.tsx"],"sourcesContent":["//This is the 'majula'. Dark Souls fans are familiar with this place. 😅\r\n//Here we managing the main states.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// import MenuButton from \"./views/MenuButton\";\r\n// import ContentContainer from \"./views/ContentContainer\";\r\n// import DataFetchPending from \"./views/DataFetchPending\";\r\nimport useStyle from \"./AppStyle\";\r\nimport { Snackbar, Slide, useMediaQuery } from \"@material-ui/core\";\r\n\r\n//Importing the redux store type.\r\nimport { RootState } from \"./store\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { rowGridToggleToReverce } from \"./redux/slices/ScreenSettingsSlice\";\r\nimport { readDataAgain } from \"./redux/slices/fetchSlice\";\r\n\r\nimport DataFetchPending from \"./views/DataFetchPending\";\r\nimport MenuButton from \"./views/MenuButton\";\r\nimport ContentContainer from \"./views/ContentContainer\";\r\nimport { isBrowser } from \"./utils\";\r\n\r\n//An easy way to apply transitions to Material-UI components.\r\n//Pre writen transition from Material-UI.\r\n//I could write it my self, just to show off some gadgeta. 😉\r\nfunction TransitionUp(props: any | undefined | null) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction App(): React.ReactElement {\r\n  // console.clear();\r\n  const [svgSetupTrigger, setSVGSetupTrigger] = useState<boolean>(false);\r\n  const [snackState, setSnackState] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  const matches = useMediaQuery('(min-width:600px)');\r\n  \r\n  const {\r\n    buttonAction: { rootState, buttonTrigered },\r\n    dataStore: { annualrain, slums, population, months },\r\n  } = useSelector((state: RootState) => state);\r\n  const classes = useStyle();\r\n\r\n  useEffect(()=>{\r\n    console.log('Media query changed!!!!');\r\n    \r\n  }, [matches])\r\n\r\n  useEffect(() => {\r\n    if (!isBrowser) {\r\n      if (window.innerWidth < 1280) {\r\n        dispatch(rowGridToggleToReverce(window.innerWidth));\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    annualrain.state === \"fulfilled\" &&\r\n      slums.state === \"fulfilled\" &&\r\n      population.state === \"fulfilled\" &&\r\n      months.state === \"fulfilled\" &&\r\n      setSVGSetupTrigger(true);\r\n\r\n    (annualrain.state === \"rejected\" ||\r\n      slums.state === \"rejected\" ||\r\n      population.state === \"rejected\" ||\r\n      months.state === \"rejected\") &&\r\n      setSnackState(true);\r\n  }, [annualrain.state, slums.state, population.state, months.state]);\r\n\r\n  //This function controles click action on the snack bar.\r\n  const snackBarRefreshAction = () => {\r\n    //First we set the 'refresh state of the 'fetchSlice' action to trigger the fetch\r\n    //action on the asyncThunk function with state 'rejected'.\r\n    //In this case only the rejected API will be called, not the rest. 🤯\r\n    //More detail at 'fetchSlice.tsx'.\r\n    dispatch(readDataAgain());\r\n    //Close the snack bar.\r\n    setSnackState(false);\r\n  };\r\n\r\n  console.log(\"App\");\r\n  \r\n  return (\r\n    <div\r\n      className={rootState ? `${classes.root} open` : `${classes.root} close`}\r\n    >\r\n      {!svgSetupTrigger && buttonTrigered === \"D3\" && (\r\n        <div className={classes.loading}>\r\n          <DataFetchPending />;\r\n        </div>\r\n      )}\r\n      <h1>{`(min-width:600px) matches: ${matches}`}</h1>\r\n      <Snackbar\r\n        open={snackState}\r\n        TransitionComponent={TransitionUp}\r\n        message={`Failed to fetch data. Click here to try again.`}\r\n        onClick={snackBarRefreshAction}\r\n        classes={{ root: classes.snackbar }}\r\n      />\r\n      <MenuButton />;\r\n      <ContentContainer />;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => createStyles({\r\n    root: {\r\n      height: \"100vh\",\r\n      display: \"flex\",\r\n      flexFlow: \"row-reverse\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        flexFlow: \"column\",\r\n      },\r\n      \"&.open\": {\r\n        paddingRight: theme.spacing(20),\r\n        [theme.breakpoints.down(\"md\")]: {\r\n          paddingRight: theme.spacing(0),\r\n        },\r\n      },\r\n      \"&.close\": {\r\n        paddingRight: 0,\r\n      },\r\n    },\r\n    landinginfo: {\r\n      position: \"absolute\",\r\n    },\r\n    Splash: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: theme.spacing(6),\r\n      color: \"white\",\r\n    },\r\n    loading: {\r\n      width: \"100%\",\r\n      position: \"absolute\",\r\n      top: 0,\r\n      zIndex: 1,\r\n    },\r\n    snackbar:{\r\n      cursor: 'pointer',\r\n      // background: 'red',\r\n      '& >*':{\r\n        background: '#9c3c41',\r\n      }\r\n    }\r\n  }));\r\n\r\n  export default useStyle","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\n\r\nconst axiosInterception=() => {\r\n  const baseURL = process.env.REACT_APP_BASE_DESTINATION;\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n  \r\n  const axiosInterceptor = axios.create({\r\n    baseURL,\r\n    timeout: 5000,\r\n    headers,\r\n  });\r\n\r\n  const onResponse = (response: AxiosResponse): AxiosResponse => {\r\n    return response;\r\n  };\r\n  const onResponseError = (error: AxiosError): AxiosError => {\r\n    return error;\r\n  };\r\n\r\n  axiosInterceptor.interceptors.response.use(onResponse, onResponseError);\r\n\r\n  return axiosInterceptor;\r\n};\r\n\r\nexport default axiosInterception\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState={\r\n    gridRowToReverce: 'row',\r\n    gridRowToColumn: 'row',\r\n    screenState: 'wide'\r\n}\r\n\r\nconst windowSettingsSlice=createSlice({\r\n    name: 'ScreenSettings',\r\n    initialState,\r\n    reducers:{\r\n        rowGridToggleToReverce(state: any, action: PayloadAction<number>){\r\n            state.gridRowToReverce='column-reverse';\r\n            if(action.payload<1280){\r\n              state.screenState='limited';\r\n              state.gridRowToColumn='column';  \r\n            } \r\n        }\r\n    }\r\n})\r\n\r\nexport const {rowGridToggleToReverce}=windowSettingsSlice.actions;\r\n\r\nexport default windowSettingsSlice.reducer","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n// import {Positions} from '../../views/MenuButton/types'\r\n\r\ninterface initialType {\r\n  rootState: boolean;\r\n  delayState: boolean;\r\n  direction: boolean;\r\n  buttonTrigered: string;\r\n  renderPage: string;\r\n  data: MenuData[];\r\n}\r\n\r\ninterface MenuData {\r\n  name: string;\r\n  img: string;\r\n  toolKit: string;\r\n  info: string;\r\n  width: number;\r\n}\r\n\r\nconst initialState: initialType = {\r\n  rootState: false,\r\n  delayState: true,\r\n  direction: true,\r\n  buttonTrigered: \"\",\r\n  renderPage: \"\",\r\n  data: [\r\n    {\r\n      name: \"D3\",\r\n      img: \"images/Button/Menu_List/Map.png\",\r\n      toolKit: \"D3.js Project\",\r\n      info: 'My Name is Amin a React.js Front End Dev',\r\n      width: 200,\r\n    },\r\n    {\r\n      name: \"Info\",\r\n      img: \"images/Button/Menu_List/info.png\",\r\n      toolKit: \"Who am I\",\r\n  \r\n      info: 'Thank you for your visit.!!!',\r\n      width: 90,\r\n    },\r\n    {\r\n      name: \"CV\",\r\n      img: \"images/Button/Menu_List/CV.png\",\r\n      toolKit: \"Resume\",\r\n      info: '',\r\n      // info: 'I am a React.js Front-End Developer',\r\n      width: 90,\r\n    },\r\n    {\r\n      name: \"UX\",\r\n      img: \"images/Button/Menu_List/UX.png\",\r\n      toolKit: \"UX Design Case Study\",\r\n      // info: 'Following menu helps you to findout more about me!!!',\r\n      info: '',\r\n\r\n      width: 150,\r\n    },\r\n    {\r\n      name: \"UI\",\r\n      img: \"images/Button/Menu_List/UI.png\",\r\n      toolKit: \"React.js User Interaction\",\r\n      // info: 'Thanks.',\r\n      info: '',\r\n      width: 90,\r\n    },\r\n    {\r\n      name: \"CP\",\r\n      img: \"images/Button/Menu_List/ColorPalette.png\",\r\n      toolKit: \"P5.js Image to Color palette\",\r\n      info: 'Hello!!!',\r\n      width: 150,\r\n    },\r\n  ],\r\n};\r\n\r\nconst buttonActionSlice = createSlice({\r\n  name: \"buttonAction\",\r\n  initialState,\r\n  reducers: {\r\n    containerStateToggle(state: any, action: PayloadAction<string>) {\r\n      state.rootState = action.payload === \"PowerButton\" ? false : true;\r\n      state.buttonTrigered =\r\n        action.payload === \"PowerButton\" ? \" \" : action.payload;\r\n      state.renderPage =\r\n        action.payload === \"PowerButton\" ? \" \" : action.payload;\r\n      state.delayState = false;\r\n    },\r\n    onDelayStateChange(state) {\r\n      state.delayState = true;\r\n    },\r\n    // addButtonsPosition(state, {payload}: PayloadAction<Positions[]>){\r\n    //   console.log(payload);\r\n      \r\n    // }\r\n  },\r\n});\r\n\r\nexport const { containerStateToggle, onDelayStateChange } =\r\n  buttonActionSlice.actions;\r\n\r\nexport default buttonActionSlice.reducer;\r\n","//All data fetching happens here.\r\n//Stage 1 type introduction and initialState configuration.\r\n//Stage 2 asyncThunk function to call the APIs through Axios Interceptor. No TOKEN CHECK 🤝\r\n//Stage 3 Reducers.\r\n//Stage 4 asyncThunk responses handling.\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../store\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axiosInterceptor from \"../../axiosInterceptor\";\r\n\r\n//Setting a type check for properties in initialState object.\r\n//This helps to prevent mutation on properties from different components.\r\ninterface states {\r\n  data: [];\r\n  state: string;\r\n  error: string;\r\n}\r\n\r\n//Setting the type specification on the initialState object.\r\n//This helps to prevent mutation on properties from different components.\r\ninterface fetchStat {\r\n  refresh: boolean;\r\n  annualrain: states;\r\n  slums: states;\r\n  population: states;\r\n  months: states;\r\n  errorState: boolean;\r\n}\r\n\r\n//Configuring the main state for this slice.\r\nconst initialState: fetchStat = {\r\n  refresh: false,\r\n  errorState: false,\r\n  annualrain: {\r\n    data: [],\r\n    state: \"empty\",\r\n    error: \"\",\r\n  },\r\n  slums: {\r\n    data: [],\r\n    state: \"empty\",\r\n    error: \"\",\r\n  },\r\n  population: {\r\n    data: [],\r\n    state: \"empty\",\r\n    error: \"\",\r\n  },\r\n  months: {\r\n    data: [],\r\n    state: \"empty\",\r\n    error: \"\",\r\n  },\r\n};\r\n\r\n//AsyncThunk function to read 'annualrain' data from data store.\r\n//Benefits of using asyncThunk in this case is easy API response handeling.\r\nexport const fetchAnnualrainData = createAsyncThunk(\r\n  //Name of the action to be monitored in Redux console.\r\n  \"fetchData/AnnualRainData\",\r\n  //Dicunstructing 'thunkAPI' and grabing 'rejectWithValue' that we will need\r\n  //for error handeling.\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInterceptor().get(\"annualrain\");\r\n      return response.data.annualRain;\r\n    } catch (err) {\r\n      //Rejecting the action so we can change the state on error for each asyncThunk action.\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//AsyncThunk function to read 'slums' data from data store.\r\n//Benefits of using asyncThunk in this case is easy API response handeling.\r\nexport const fetchSlumsData = createAsyncThunk(\r\n  //Name of the action to be monitored in Redux console.\r\n  \"fetchData/SlumsData\",\r\n  //Dicunstructing 'thunkAPI' and grabing 'rejectWithValue' that we will need\r\n  //for error handeling.\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInterceptor().get(\"slums\");\r\n      return response.data.slums;\r\n    } catch (err) {\r\n      //Rejecting the action so we can change the state on error for each asyncThunk action.\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//AsyncThunk function to read 'population' data from data store.\r\n//Benefits of using asyncThunk in this case is easy API response handeling.\r\nexport const fetchPopulationData = createAsyncThunk(\r\n  //Name of the action to be monitored in Redux console.\r\n  \"fetchData/PopulationData\",\r\n  //Dicunstructing 'thunkAPI' and grabing 'rejectWithValue' that we will need\r\n  //for error handeling.\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInterceptor().get(\"population\");\r\n      return response.data.population;\r\n    } catch (err) {\r\n      //Rejecting the action so we can change the state on error for each asyncThunk action.\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//AsyncThunk function to read 'months' data from data store.\r\n//Benefits of using asyncThunk in this case is easy API response handeling.\r\nexport const fetchMonthData = createAsyncThunk(\r\n  //Name of the action to be monitored in Redux console.\r\n  \"fetchData/MonthsData\",\r\n  //Dicunstructing 'thunkAPI' and grabing 'rejectWithValue' that we will need\r\n  //for error handeling.\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInterceptor().get(\"months\");\r\n      return response.data.monthlyTotal;\r\n    } catch (err) {\r\n      //Rejecting the action so we can change the state on error for each asyncThunk action.\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nconst FetchSlice = createSlice({\r\n  name: \"dataFetchSlice\",\r\n  initialState,\r\n  reducers: {\r\n    readDataAgain: (state) => {\r\n      state.refresh = true;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchAnnualrainData.pending, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          annualrain: {\r\n            ...state.annualrain,\r\n            state: \"pending\",\r\n          },\r\n        };\r\n      })\r\n      .addCase(fetchAnnualrainData.fulfilled, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          annualrain: {\r\n            ...state.annualrain,\r\n            data: action.payload,\r\n            state: \"fulfilled\",\r\n          },\r\n        };\r\n      })\r\n      .addCase(fetchAnnualrainData.rejected, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          annualrain: {\r\n            ...state.annualrain,\r\n            state: \"rejected\",\r\n            error: action.payload,\r\n          },\r\n          errorState: true\r\n        };\r\n      })\r\n\r\n      .addCase(fetchSlumsData.pending, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          slums: {\r\n            ...state.slums,\r\n            state: \"pending\",\r\n          },\r\n        };\r\n      })\r\n      .addCase(fetchSlumsData.fulfilled, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          slums: {\r\n            ...state.slums,\r\n            data: action.payload,\r\n            state: \"fulfilled\",\r\n          },\r\n        };\r\n      })\r\n      .addCase(fetchSlumsData.rejected, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          slums: {\r\n            ...state.slums,\r\n            state: \"rejected\",\r\n            error: action.payload,\r\n          },\r\n          errorState: true\r\n        };\r\n      })\r\n\r\n      .addCase(fetchPopulationData.pending, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          population: {\r\n            ...state.population,\r\n            state: \"pending\",\r\n            error: action.payload,\r\n          },\r\n        };\r\n      })\r\n      .addCase(fetchPopulationData.fulfilled, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          population: {\r\n            ...state.population,\r\n            data: action.payload,\r\n            state: \"fulfilled\",\r\n          },\r\n        };\r\n      })\r\n      .addCase(fetchPopulationData.rejected, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          population: {\r\n            ...state.population,\r\n            state: \"rejected\",\r\n            error: action.payload,\r\n          },\r\n          errorState: true\r\n        };\r\n      })\r\n\r\n      .addCase(fetchMonthData.pending, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          months: {\r\n            ...state.months,\r\n            state: \"pending\",\r\n          },\r\n        };\r\n      })\r\n      .addCase(fetchMonthData.fulfilled, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          months: {\r\n            ...state.months,\r\n            data: action.payload,\r\n            state: \"fulfilled\",\r\n          },\r\n        };\r\n      })\r\n      .addCase(fetchMonthData.rejected, (state: RootState, action) => {\r\n        return {\r\n          ...state,\r\n          refresh: false,\r\n          months: {\r\n            ...state.months,\r\n            state: \"rejected\",\r\n            error: action.payload,\r\n          },\r\n          errorState: true\r\n        };\r\n      });\r\n  },\r\n});\r\n\r\nexport const { readDataAgain } = FetchSlice.actions;\r\n\r\nexport default FetchSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { useDispatch } from 'react-redux'\r\nimport buttonActionSlice from \"./redux/slices/buttonActionSlice\";\r\nimport ScreenSettingsSlice from \"./redux/slices/ScreenSettingsSlice\";\r\nimport FetchSlice from './redux/slices/fetchSlice'\r\n\r\nconst store: any = configureStore({\r\n    reducer:{\r\n        buttonAction: buttonActionSlice,\r\n        screenAction: ScreenSettingsSlice,\r\n        dataStore: FetchSlice\r\n    },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>() // Export a hook that can be reused to resolve types\r\n\r\nexport default store","export const isBrowser = () => typeof window !== \"undefined\"","import React, { useRef } from \"react\";\r\nimport useStyle from \"./style\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\nimport UX from \"../Pages/UX\";\r\nimport UI from \"../Pages/UI\";\r\nimport CV from \"../Pages/CV\";\r\n// import D3 from \"../Pages/D3\";\r\nimport Undeveloped from \"../Pages/Undeveloped\";\r\n\r\nfunction RenderObject(state: any): React.ReactElement {\r\n  switch (state.state) {\r\n    case \"UX\":\r\n      return <UX />;\r\n    case \"UI\":\r\n      return <UI />;\r\n    case \"CV\":\r\n      return <CV />;\r\n    // case \"D3\":\r\n      // return <D3 />;\r\n    default:\r\n      return <Undeveloped />;\r\n  }\r\n}\r\n\r\nfunction ContentContainer(): React.ReactElement {\r\n  const classes = useStyle();\r\n  const rootDetails = useRef<HTMLDivElement>(null);\r\n  const scrollToTop = useRef<HTMLDivElement>(null);\r\n  const handleScroll = () => {\r\n    rootDetails.current &&\r\n    scrollToTop.current &&\r\n    rootDetails.current.scrollTop > 800\r\n      ? (scrollToTop.current.style.transform =\r\n          window.innerWidth > 1280\r\n            ? \"translateY(-15px) scale(1)\"\r\n            : \"translateY(-75px) scale(1)\")\r\n      : scrollToTop.current &&\r\n        (scrollToTop.current.style.transform =\r\n          window.innerWidth > 1280\r\n            ? \"translateY(-15px) scale(0)\"\r\n            : \"translateY(-75px) scale(1)\");\r\n  };\r\n\r\n  const handleClick = () => {\r\n    rootDetails.current?.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const {\r\n    buttonAction: { rootState, delayState, renderPage },\r\n    screenAction: { screenState },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  return (\r\n    <div\r\n      onScroll={handleScroll}\r\n      ref={rootDetails}\r\n      className={\r\n        rootState && screenState === \"wide\"\r\n          ? `${classes.root} open`\r\n          : rootState && screenState === \"limited\"\r\n          ? `${classes.root} open_vertically`\r\n          : !rootState && delayState && screenState === \"wide\"\r\n          ? `${classes.root} close`\r\n          : !rootState && delayState && screenState === \"limited\"\r\n          ? `${classes.root} close_vertically`\r\n          : screenState === \"limited\"\r\n          ? `${classes.root} close_vertically`\r\n          : classes.root\r\n      }\r\n      style={\r\n        rootState && !delayState && screenState === \"wide\"\r\n          ? { width: \"100%\" }\r\n          : !rootState && delayState && screenState === \"wide\"\r\n          ? { width: \"0%\" }\r\n          : rootState && !delayState && screenState === \"limited\"\r\n          ? { height: \"100%\" }\r\n          : !rootState && delayState && screenState === \"limited\"\r\n          ? { height: \"0%\" }\r\n          : {}\r\n      }\r\n    >\r\n      <div\r\n        ref={scrollToTop}\r\n        className={classes.scrollToTop}\r\n        onClick={handleClick}\r\n      >\r\n        <div />\r\n      </div>\r\n      <img\r\n        src=\"images/Containers/Content_Frame/Mobile.png\"\r\n        alt=\"content\"\r\n        className={classes.MobileFrame}\r\n      />\r\n      <RenderObject state={renderPage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentContainer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst mytheme = {\r\n  radius: 80,\r\n};\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    opacity: 1,\r\n    transform: \"translateX(-150%)\",\r\n    transition:\r\n      \"transform 1s ease-in-out .5s, width .5s ease, height .5s ease, padding .5s ease, opacity .5s ease .5s\",\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n    direction: \"rtl\",\r\n    backgroundImage:\r\n      \"url(images/Containers/Content_Frame/Page-Frame-Light-Wave.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"right\",\r\n    padding: theme.spacing(12, 41, 12, 6),\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      padding: theme.spacing(12, 40, 0, 6),\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      backgroundImage: \"none\",\r\n      padding: theme.spacing(0, 6, 12),\r\n    },\r\n    \"&.open\": {\r\n      transform: \"translateX(0%)\",\r\n    },\r\n    \"&.open_vertically\": {\r\n      transform: \"translateY(0%)\",\r\n    },\r\n    \"&.close_vertically\": {\r\n      transform: \"translate(0%, 100%)\",\r\n      padding: 0,\r\n      opacity: 0,\r\n    },\r\n    \"&.close\": {\r\n      padding: 0,\r\n      opacity: 0,\r\n    },\r\n  },\r\n  MobileFrame: {\r\n    display: \"none\",\r\n    position: \"sticky\",\r\n    height: \"auto\",\r\n    top: \"-5px\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  scrollToTop: {\r\n    position: \"sticky\",\r\n    top: \"100%\",\r\n    right: \"0%\",\r\n    transform: \"translateY(-15px) scale(0)\",\r\n    width: mytheme.radius,\r\n    height: mytheme.radius,\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n    transition: \"transform .5s ease-in-out\",\r\n    [theme.breakpoints.down('md')]:{\r\n      transform: \"translateY(-35px) scale(0)\",\r\n    },\r\n    \"& >div\": {\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundImage: \"url(images/Button/ScrollToTop/Top.png)\",\r\n      backgroundPosition: \"center\",\r\n      backgroundSize: \"contain\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      zIndex: 1,\r\n      \"&::before\": {\r\n        content: '\"\"',\r\n        display: \"block\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: \"#12393D\",\r\n        opacity: .8,\r\n        borderRadius: \"50%\",\r\n        width: mytheme.radius,\r\n        height: mytheme.radius,\r\n        filter: 'blur(15px)',\r\n        zIndex: -2,\r\n        transition: 'transform .5s ease-in-out, background-color 1s ease-in'\r\n      },\r\n      '&::after':{\r\n        content: '\"\"',\r\n        display: 'block',\r\n        position: 'absolute',\r\n        top: '-1%', \r\n        bottom: 0, \r\n        left: 0, \r\n        right: '-1%',\r\n        width: '102%',\r\n        height: '102%',\r\n        background: 'linear-gradient(163deg, rgba(156,60,65,1) 0%, rgba(18,57,61,1) 100%)',\r\n        borderRadius: '50%',\r\n        zIndex: -1,\r\n        transition: 'transform .5s ease-in-out .5s',\r\n        '-webkit-transition' : '-webkit-filter 500ms linear, -webkit-transform .5s ease-in-out .5s'\r\n      }\r\n    },\r\n    '&:hover, &:focus':{\r\n      '&>div::before':{\r\n        transform: 'scale(1.5)',\r\n        backgroundColor: \"#9C3C41\",\r\n      },\r\n      '&>div::after':{\r\n        transform: 'scale(1.1)',\r\n        filter: 'blur(1.5px)',\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\nexport default useStyle;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { RootState } from \"../../store\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  barRoot:{\r\n    backgroundColor: '#061621'\r\n  },\r\n  bar:{\r\n      backgroundColor: '#12393d'\r\n  },\r\n  barError:{\r\n    backgroundColor: '#9c3c41'\r\n  }\r\n});\r\n\r\n\r\nfunction DataPending(): React.ReactElement {\r\n  const classes = useStyles();\r\n  const {dataStore: { errorState }}=useSelector((state: RootState)=> state)\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress \r\n      variant='indeterminate'\r\n      classes={!errorState ? {\r\n        query: classes.barRoot,\r\n        bar: classes.bar, \r\n        } : {\r\n          query: classes.barRoot,\r\n          bar: classes.barError, \r\n          }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataPending;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { RootState } from \"../../store\";\r\nimport useStyle from \"./style\";\r\nimport useMeasure from \"react-use-measure\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch } from \"../../store\";\r\nimport { isBrowser } from \"../../utils\";\r\nimport {\r\n  containerStateToggle,\r\n  onDelayStateChange,\r\n  // addButtonsPosition\r\n} from \"../../redux/slices/buttonActionSlice\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\n\r\ninterface mediaQueries {\r\n  rootState: boolean;\r\n  phase: boolean;\r\n}\r\n\r\n// import { Positions } from \"./types\";\r\n// import { Typography } from \"@material-ui/core\";\r\n\r\nconst calPos = (\r\n  index: number,\r\n  length: number,\r\n  size: number,\r\n  state: boolean,\r\n  windowState: mediaQueries\r\n) => {\r\n  if (windowState.rootState) {\r\n    const inc = state ? 1.5 : 3;\r\n    const rad = size / inc;\r\n    const angle = ((2 * Math.PI) / length) * index;\r\n    const x = rad * Math.cos(angle);\r\n    const y = rad * Math.sin(angle);\r\n    return { x, y };\r\n  } else {\r\n    const phase = windowState.phase ? 8 : 20;\r\n    const inc = state ? 3 : 30;\r\n    const angle = ((Math.PI * 2) / length + 2) * index;\r\n    const rad = size / inc;\r\n    const x = rad * 5 * Math.cos(angle) + 5 * (rad * Math.sin(angle)) - phase;\r\n    const y = 0;\r\n    return { x, y };\r\n  }\r\n};\r\nfunction MenuButton(): React.ReactElement {\r\n  const classes = useStyle();\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const windowState = {\r\n    rootState: useMediaQuery(\"(min-width:1280px)\"),\r\n    phase: useMediaQuery(\"(max-width:560px)\"),\r\n  };\r\n\r\n  // const [showInfo, setShowInfo] = useState<boolean>(false);\r\n  // const [buttonPositions, setButtonsPosition] = useState<Positions[]>([\r\n  //   { x: 0, y: 0 },\r\n  // ]);\r\n  const parentElement = useRef<HTMLDivElement>(null);\r\n  const {\r\n    buttonAction: { rootState, delayState, data },\r\n    screenAction: { screenState },\r\n  } = useSelector((state: RootState) => state);\r\n  const [buttonMesures, { width }] = useMeasure();\r\n  const [powerState, setPowerState] = useState<boolean>(false);\r\n  const buttonSizing = width;\r\n\r\n  // useEffect(() => {\r\n  //   buttonSizing > 0 &&\r\n  //     data.map(\r\n  //       ({ name, img }: { name: string; img: string }, index: number) => {\r\n  //         // console.log(index);\r\n  //         const { x, y } = calPos(index, data.length, buttonSizing, powerState);\r\n  //         setButtonsPosition((preState) => {\r\n  //           return [...preState, { x, y }];\r\n  //         });\r\n  //       }\r\n  //     );\r\n  // }, [buttonSizing]);\r\n  // console.log(buttonPositions);\r\n\r\n  const handlePowerClick = () => {\r\n    console.log(\"Hello\");\r\n    const parentChilrdernLength = parentElement.current?.childElementCount;\r\n    const prentArray = parentElement.current?.children;\r\n    if (parentChilrdernLength && prentArray) {\r\n      for (let i = 1; i < parentChilrdernLength; i++) {\r\n        prentArray[i].children[0].classList.remove(\"focused\");\r\n      }\r\n    }\r\n    if (rootState) {\r\n      dispatch(containerStateToggle(\"PowerButton\"));\r\n      setTimeout(() => {\r\n        dispatch(onDelayStateChange());\r\n      }, 500);\r\n    } else {\r\n      setPowerState(() => !powerState);\r\n    }\r\n  };\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    const payload = e.currentTarget.id;\r\n    const parentChilrdernLength = parentElement.current?.childElementCount;\r\n    const prentArray = parentElement.current?.children;\r\n    if (parentChilrdernLength && prentArray) {\r\n      for (let i = 1; i < parentChilrdernLength; i++) {\r\n        prentArray[i].children[0].id === payload\r\n          ? prentArray[i].children[0].classList.add(\"focused\")\r\n          : prentArray[i].children[0].classList.remove(\"focused\");\r\n      }\r\n    }\r\n    dispatch(containerStateToggle(payload));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      ref={parentElement}\r\n      style={\r\n        screenState === \"wide\" && !rootState && !delayState\r\n          ? { paddingRight: 0 }\r\n          : screenState === \"limited\" && !rootState\r\n          ? { paddingTop: 0 }\r\n          : {}\r\n      }\r\n    >\r\n      <div\r\n        className={\r\n          powerState\r\n            ? `${classes.powerButton} open`\r\n            : `${classes.powerButton} close`\r\n        }\r\n        onClick={handlePowerClick}\r\n        // onMouseOver={() => setShowInfo(true)}\r\n        // onMouseOut={() => setShowInfo(false)}\r\n      >\r\n        <img\r\n          ref={buttonMesures}\r\n          src=\"images/Button/Menu_Trigger/Power_Button-Stoke.png\"\r\n          alt=\"content-asset\"\r\n        />\r\n      </div>\r\n\r\n      {data.map(\r\n        (\r\n          {\r\n            name,\r\n            img,\r\n            toolKit,\r\n            info,\r\n          }: { name: string; img: string; toolKit: string; info: string },\r\n          index: number\r\n        ) => {\r\n          const { x, y } = calPos(\r\n            index,\r\n            data.length,\r\n            buttonSizing,\r\n            powerState,\r\n            windowState\r\n          );\r\n          return (\r\n            <div\r\n              key={name}\r\n              className={classes.buttonContainers}\r\n              style={{ transform: `translate(${x}px, ${y}px)` }}\r\n            >\r\n              {/* {info != \"\" && (\r\n                <div className={classes.introTexts_container}>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    className={\r\n                      showInfo && !powerState\r\n                        ? `${classes.introTexts_text} open`\r\n                        : `${classes.introTexts_text} close`\r\n                    }\r\n                  >\r\n                    {info}\r\n                  </Typography>\r\n                </div>\r\n              )} */}\r\n              <div\r\n                id={name}\r\n                className={classes.iconButtons}\r\n                style={{\r\n                  width: buttonSizing / 4,\r\n                  height: buttonSizing / 4,\r\n                  backgroundImage: `url(${img})`,\r\n                }}\r\n                onClick={(e) => handleClick(e)}\r\n              ></div>\r\n            </div>\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuButton;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"20%\",\r\n    zIndex: 1,\r\n    transition: \"transform 1s ease-in\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n      height: \"20%\",\r\n      paddingTop: theme.spacing(15),\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingTop: theme.spacing(7),\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingTop: theme.spacing(1),\r\n    },\r\n  },\r\n  powerButton: {\r\n    cursor: \"pointer\",\r\n    zIndex: 2,\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"18%\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"25%\",\r\n    },\r\n    \"&>img\": {\r\n      width: \"100%\",\r\n      // minWidth: \"30%\",\r\n    },\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      zIndex: -1,\r\n      top: \"10%\",\r\n      bottom: 0,\r\n      left: \"10%\",\r\n      right: 0,\r\n      width: \"80%\",\r\n      height: \"80%\",\r\n      borderRadius: \"50%\",\r\n      opacity: 1,\r\n      filter: \"blur(10px)\",\r\n      transition:\r\n        \"background-color 1s cubic-bezier(0, 1.51, 0.12, -0.29), -webkit-filter 2000ms cubic-bezier(0, 1.51, 0.12, -0.29)\",\r\n    },\r\n    \"&.open\": {\r\n      \"&::before\": {\r\n        filter: \"blur(15px)\",\r\n        transform: \"scale(1.05)\",\r\n        backgroundColor: \"#12393D\",\r\n      },\r\n    },\r\n    \"&.close\": {\r\n      \"&::before\": {\r\n        filter: \"blur(5px)\",\r\n        backgroundColor: \"#E4E5E7\",\r\n      },\r\n    },\r\n  },\r\n  menuButtons: {\r\n    position: \"absolute\",\r\n  },\r\n  buttonContainers: {\r\n    position: \"absolute\",\r\n    transition: \"transform 1s ease-in-out\",\r\n  },\r\n  iconButtons: {\r\n    position: \"relative\",\r\n    backgroundSize: \"contain\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n    \"&:hover, &:focus\": {\r\n      \"&::after\": {\r\n        transform: \"rotate(180deg) scale(1.1)\",\r\n        filter: \"blur(3px)\",\r\n      },\r\n      \"&::before\": {\r\n        transform: \"scale(1.2)\",\r\n        background: \"rgba(18,57,61,.2)\",\r\n      },\r\n    },\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      right: 0,\r\n      bottom: 0,\r\n      left: \"0\",\r\n      zIndex: -1,\r\n      borderRadius: \"inherit\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      transform: \"scale(1.05)\",\r\n      background:\r\n        \"linear-gradient(155deg, rgba(122,145,147,1) 0%, rgba(6,22,33,1) 100%)\",\r\n      transition: \"transform .5s ease-in, filter 500ms linear\",\r\n      \"-webkit-transition\":\r\n        \"-webkit-filter 500ms linear, -webkit-transform .5s ease-in\",\r\n    },\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      top: \"-1px\",\r\n      right: 0,\r\n      bottom: 0,\r\n      left: \"-1px\",\r\n      zIndex: -2,\r\n      borderRadius: \"inherit\",\r\n      background: \"rgba(0,0,0,.5)\",\r\n      filter: \"blur(12px)\",\r\n      transition: \"transform .2s ease-in-out\",\r\n    },\r\n    \"&.focused\": {\r\n      \"&::before\": {\r\n        transform: \"scale(1.2)\",\r\n        filter: \"blur(12px)\",\r\n        background: \"rgba(18,57,61,1)\",\r\n      },\r\n    },\r\n  },\r\n  textOnPath: {\r\n    position: \"absolute\",\r\n    \"&>path\": {\r\n      transform: \"translate(-693.7247px, -269.9313px)\",\r\n      // fill: 'transparent',\r\n    },\r\n    \"&>text\": {\r\n      fill: \"white\",\r\n    },\r\n  },\r\n  introTexts_container: {\r\n    position: \"absolute\",\r\n    width: \"max-content\",\r\n    transform: \"translate(0, -50%)\",\r\n    top: \"50%\",\r\n    left: \"100%\",\r\n    paddingLeft: theme.spacing(2),\r\n    zIndex: -3,\r\n  },\r\n  introTexts_text: {\r\n    position: \"relative\",\r\n    zIndex: 0,\r\n    display: 'block',\r\n    color: '#e4e5e7',\r\n    padding: theme.spacing(1, 1, 1, 2),\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      // backgroundColor: \"#e4e5e7\",\r\n      position: \"absolute\",\r\n      top: 0,\r\n      bottom: 0,\r\n      left: \"-40%\",\r\n      right: 0,\r\n      zIndex: -3,\r\n      borderRadius: '6px'\r\n    },\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      backgroundColor: \"#061621\",\r\n      position: \"absolute\",\r\n      transform: \"scale(1.1)\",\r\n      top: 0,\r\n      bottom: 0,\r\n      left: \"-30%\",\r\n      right: 0,\r\n      zIndex: 1,\r\n      transition: 'width 1s ease-in-out 1.1s, transform 1s ease-in-out'\r\n    },\r\n    \"&.open\": {\r\n      \"&::after\": {\r\n        width: 0,\r\n        transform: 'translateX(100%) scale(1.1)',\r\n      },\r\n    },\r\n    \"&.close\": {\r\n      \"&::after\": {\r\n        width: '130%',\r\n        transform: 'translateX(0) scale(1.1)'\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyle;\r\n","import React from \"react\";\r\nimport useStyle from \"../styles\";\r\nimport { Grid, Link, Typography, Divider } from \"@material-ui/core\";\r\nimport { containerStateToggle } from \"../../../redux/slices/buttonActionSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst reesbyResponsibilities = [\r\n  \"Leading the Front-End team.\",\r\n  \"Developed Axios Interceptor and API calls.\",\r\n  \"Developed Redux state management.\",\r\n  \"Developed main project login and register page.\",\r\n  \"Developed main project landing page (React Web Application) individually. \",\r\n  \"UX/UI Design for the new platform. \",\r\n];\r\nconst freeLanceResponsibilities = [\r\n  \"Communicating with clients.\",\r\n  \"Iterative progress.\",\r\n  \"Data visualization.\",\r\n  \"Web format Portfolio development HTML/CSS/JS.\",\r\n  \"User Interaction Design.\",\r\n  \"React.js development.\",\r\n];\r\nconst mentoringResponsibilities = [\r\n  \"Organizing teaching material.\",\r\n  \"Explaining material in simple and small projects.\",\r\n  \"Designing small projects for homework practices. \",\r\n];\r\nfunction CV(): React.ReactElement {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLinkClick = (\r\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>,\r\n    linkName: string\r\n  ) => {\r\n    e.preventDefault();\r\n    dispatch(containerStateToggle(linkName));\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justify=\"space-between\"\r\n        alignContent=\"flex-start\"\r\n        className={classes.topic_grid}\r\n      >\r\n        <Grid item lg={6} md={12} className={classes.topick_heading}>\r\n          <Typography variant=\"h3\">Mohammad Amin Mohammadi</Typography>\r\n          <Typography variant=\"h4\">React.js Developer</Typography>\r\n          <Typography variant=\"h4\">Front-End Developer</Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{ fontSize: \"12px\", color: \"#426164\" }}\r\n          >\r\n            Top Skills:\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{ fontSize: \"12px\", color: \"#426164\" }}\r\n          >\r\n            React.js, React-Redux, Redux ToolKit, React Hooks, React\r\n            Functions,TypeScript, Axios, D3.js, JavaScript Vanilla, JSX, HTML,\r\n            CSS, Material-UI.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item lg={6} md={12} className={classes.topic_pragraph}>\r\n          <Typography variant=\"body1\">\r\n            I am graduated from the University of Sydney Bachelor of Design\r\n            Computing that empowers me with knowledge and experience in User\r\n            Experience Design and User Interaction Design alongside my\r\n            speciality in React.js Front-End Development. After mastering skills\r\n            in CSS, HTML, JavaScript, D3.js, P5.js, P3 Processing Java I fell in\r\n            love with React.js and have developed several projects in React.js\r\n            and TypeScripts. After puting my skills in to a real-world test I\r\n            have mastered React Hooks, React-Redux, Redux ToolKir, TypeScript,\r\n            Axios Interceptors, Restful API, and Authentication.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          spacing={4}\r\n          justify=\"space-between\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">Education</Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={12}\r\n            spacing={4}\r\n            justify=\"space-between\"\r\n            alignContent=\"flex-start\"\r\n          >\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"h4\">Bachelor of Design Computing</Typography>\r\n              <Typography variant=\"body1\">University of Sydney</Typography>\r\n              <Typography variant=\"body1\">Jul 2017 — Dec 2020</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"body1\">\r\n                Certified skills in User Experience Design, User Interaction\r\n                Design, and Front-End Development. Mastering programming skills\r\n                in React.js, React-Redux, Redux ToolKit, Axios, Material-UI,\r\n                D3.js, JavaScript Vanilla, JSX, HTML & CSS.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\">Achivements</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"body1\">\r\n                University of Sydney hackathon Coding Fest 2020 Disaster\r\n                Prevention Project Award.\r\n              </Typography>\r\n              <Link href=\"\" onClick={(e) => handleLinkClick(e, \"D3\")}>\r\n                Bangladesh Rainfall Visualization.\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"body1\">\r\n                Fighting misinformation through social media around the Covid-19\r\n                news.\r\n              </Typography>\r\n              <Link href=\"\" onClick={(e) => handleLinkClick(e, \"UI\")}>\r\n                Covid Fact Check App-Developed in React.js.\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          spacing={4}\r\n          justify=\"space-between\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">Experience</Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={12}\r\n            spacing={4}\r\n            justify=\"space-between\"\r\n            alignContent=\"flex-start\"\r\n          >\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"h4\" style={{ color: \"#9C3C41\" }}>\r\n                React Developer\r\n              </Typography>\r\n              <Typography variant=\"body1\">Reesby</Typography>\r\n              <Typography variant=\"body1\">Mar 2021 — Present</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"body1\">\r\n                React Front-End Developer in Reesby. Leader of Front-End\r\n                development team. Developed Reesby main project landing page\r\n                using React, React-Redux, React-Spring and Material-UI.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\">Responsibilities</Typography>\r\n            </Grid>\r\n            {reesbyResponsibilities.map((data) => {\r\n              return (\r\n                <Grid item xs={12} sm={4} key={data}>\r\n                  <Typography variant=\"body1\">{data}</Typography>\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\">Achivements</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"body1\">\r\n                Three times nominated as the team member of the CRM team for\r\n                dedication and hard work resulted in great outcomes.\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider variant=\"middle\" className={classes.divider} />\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            container\r\n            xs={12}\r\n            spacing={4}\r\n            justify=\"space-between\"\r\n            alignContent=\"flex-start\"\r\n          >\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"h4\" style={{ color: \"#9C3C41\" }}>\r\n                Freelance Front End Development\r\n              </Typography>\r\n              <Typography variant=\"body1\">Freelance</Typography>\r\n              <Typography variant=\"body1\">2019 — Present</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"body1\">\r\n                Working from home on projects involve JavaScript programming and\r\n                UI design.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\">Responsibilities</Typography>\r\n            </Grid>\r\n            {freeLanceResponsibilities.map((data) => {\r\n              return (\r\n                <Grid item xs={12} sm={4} key={data}>\r\n                  <Typography variant=\"body1\">{data}</Typography>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider variant=\"middle\" className={classes.divider} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={12}\r\n            spacing={4}\r\n            justify=\"space-between\"\r\n            alignContent=\"flex-start\"\r\n          >\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"h4\" style={{ color: \"#9C3C41\" }}>\r\n                Mentoring Class Mates\r\n              </Typography>\r\n              <Typography variant=\"body1\">University of Sydney</Typography>\r\n              <Typography variant=\"body1\">Feb 2019 — Dec 2019</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"body1\">\r\n                Mentoring classmates to learn HTML/CSS/JavaScripts and P5.js.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\">Responsibilities</Typography>\r\n            </Grid>\r\n            {mentoringResponsibilities.map((data) => {\r\n              return (\r\n                <Grid item xs={12} sm={4} key={data}>\r\n                  <Typography variant=\"body1\">{data}</Typography>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CV;\r\n","import React from \"react\";\r\nimport useStyle from \"../styles\";\r\nimport { Grid, Typography, Link } from \"@material-ui/core\";\r\nimport YouTubeEmbed from \"../YouTubeEmbed\";\r\n\r\nfunction UI(): React.ReactElement {\r\n  const classes = useStyle();\r\n  const preventDefault = (\r\n    event:\r\n      | React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n      | React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n  ) => event.preventDefault();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justify=\"space-between\"\r\n        alignContent=\"flex-start\"\r\n        className={classes.topic_grid}\r\n      >\r\n        <Grid item lg={6} md={12} className={classes.topick_heading}>\r\n          <Typography variant=\"h3\">\r\n            Figting misinformation through social media\r\n          </Typography>\r\n          <Typography variant=\"h4\">Collaboration Team:</Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{ fontSize: \"12px\", color: \"#426164\" }}\r\n          >\r\n            Developer and Video: Mohammad Amin Mohammadi\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{ fontSize: \"12px\", color: \"#426164\" }}\r\n          >\r\n            UX/UI Designer and documentation: Jessica Owens\r\n          </Typography>\r\n          <Link\r\n            href=\"https://covid-19-measures-assessment.web.app/\"\r\n            className={classes.onlineLink}\r\n            style={{ bottom: \"0px\" }}\r\n            onClick={(e) => preventDefault}\r\n          >\r\n            <Typography variant=\"h5\" className={classes.link_ToExternals}>\r\n              Link to our high-fidelity prototype\r\n            </Typography>\r\n          </Link>\r\n          <Link\r\n            href=\"Assets/UI/A3 Final Report.pdf\"\r\n            className={classes.onlineLink}\r\n            style={{ bottom: \"0px\" }}\r\n            onClick={(e) => preventDefault}\r\n          >\r\n            <Typography variant=\"h5\" className={classes.link_ToExternals}>\r\n              Link to full report\r\n            </Typography>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item lg={6} md={12} className={classes.topic_pragraph}>\r\n          <Typography variant=\"body1\">\r\n            In our current state misinformation is frequently shared and whether\r\n            this is intentional or inadvertent it can have catastrophic results\r\n            on the spread of COVID-19. Maximising public access to balanced,\r\n            reliable, and up to date information is a critical success factor\r\n            for authorities worldwide. Management of highly trusted information\r\n            will have a vital role to play in the control of COVID-19. The\r\n            COVID-19 Fact Check app has been built to facilitate an effective\r\n            means of sharing information going forward. The application is an\r\n            informal educational tool, which encourages users to become aware of\r\n            the false or misleading information that they may find themselves\r\n            coming across when partaking in online activity. It’s a gamified fun\r\n            fact-based tool which will help the world #StopTheSpread.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <YouTubeEmbed embedID=\"aQ017METpTU\" />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          spacing={4}\r\n          justify=\"space-between\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">React.js</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">\r\n              Currently our planet is at a critical point of animal extinction\r\n              and bidovirsty loss. To aid in combatting this loss we have\r\n              designed the Atmoscube. Through research conducted at the\r\n              beginning of the design process we’ve identified that people often\r\n              feel unempowered in their ability to help the environment. To\r\n              solve this problem, we have aimed to create an experience that\r\n              informs and engages the user in an effort to educate and empower.\r\n              Empowerment provided by interacting with the atomscube is designed\r\n              to permeate throughout the users daily life, providing them with a\r\n              platform to continue with environmentally positive life choices.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          spacing={4}\r\n          justify=\"space-between\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">React Hooks</Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">useState</Typography>\r\n            <Typography variant=\"body1\">\r\n              \"useState\" is a React hook function that allows us to change the\r\n              state of the function components if required. React hook functions\r\n              are well design to secure the function component from possible\r\n              errors in the code as well as stabilizing the connection between\r\n              components between classes.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">useEffect</Typography>\r\n            <Typography variant=\"body1\">\r\n              \"useEffect\" function is another React hook that allows us to read\r\n              from our API data base only on specified circumstances.\r\n              \"useEffect\" helps us to minimize the tokens on our API and reduces\r\n              the load on the API server. In this application, we mainly use the\r\n              \"useEffect\" hook to read and write on our API database with a\r\n              minimum number of tokens for each request to maintain the API\r\n              service.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          spacing={4}\r\n          justify=\"space-between\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">React-Router</Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">useHistory</Typography>\r\n            <Typography variant=\"body1\">\r\n              \"useHistory\" is a hook function from React Router Core npm to\r\n              trigger the Link function in a class function rather than the\r\n              render function. \"useHistory\" in this application allows us to\r\n              route between pages using different states of function components\r\n              in conditions. In this application, this condition listens to the\r\n              direction of the user's swipe.\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">Switch</Typography>\r\n            <Typography variant=\"body1\">\r\n              \"Switch\" is unique in that it renders a route exclusively. In\r\n              contrast, every \"Route\" that matches the location renders\r\n              inclusively.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">Route</Typography>\r\n            <Typography variant=\"body1\">\r\n              \"Route\" most basic responsibility is to render some UI when its\r\n              path matches the current URL passed as the path. \"Route\" also sets\r\n              the props required for the routing component and on each request\r\n              to the path it makes the hook between the sender and receiver\r\n              component.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">Link</Typography>\r\n            <Typography variant=\"body1\">\r\n              \"Link\" allows us to navigate to specified path component/page in\r\n              HTML format (render function) and transferring object properties\r\n              as props. In this application, we have used \"Link\" on our buttons\r\n              triggering routes to other pages and transferring the props to the\r\n              function component.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          spacing={4}\r\n          justify=\"space-between\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">Google Firebase</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">\r\n              Firebase is Google's free cloud storage that handles many aspects\r\n              of backend functionality. For this project, this service allows\r\n              reservation of questions and users results in a form of API data\r\n              sources as well as deploying the platform.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={4} md={12}>\r\n            <Typography variant=\"h5\">Data set One</Typography>\r\n            <Typography variant=\"body1\">\r\n              One firebase data document is used to reserve the questions in.\r\n              This allows for easy updates of the questions.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={4} md={12}>\r\n            <Typography variant=\"h5\">Data set Two</Typography>\r\n            <Typography variant=\"body1\">\r\n              The second data document collects the users’ final results as well\r\n              as their postcode. After a user is done the result and postcode of\r\n              the question will be saved on this repository in the form of an\r\n              array of objects. This information instantly will be downloaded\r\n              from the API to draw the graph in the next page.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={4} md={12}>\r\n            <Typography variant=\"h5\">Build and Publish</Typography>\r\n            <Typography variant=\"body1\">\r\n              Thirdly, Google Firebase helps build and deploy the application on\r\n              its servers from React.js. Google fiFirebase provides this service\r\n              for free in addition to all other mentioned services.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          spacing={4}\r\n          justify=\"space-between\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">Tinder Swipe for React Library</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">\r\n              This is a pre-build swipe listener library that provides a very\r\n              smooth swipe animation to given elements. Using this library on\r\n              questions card as clear user feedback on their swipe actions. This\r\n              library also allows the application to count the correct answers\r\n              as well as the total number of questions answered. Using the\r\n              ”onSwipe” listener built-in on this library we can monitor the\r\n              direction the swipe user makes for each question.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">React Router</Typography>\r\n            <Typography variant=\"body1\">\r\n              React router library: this library allows the application to\r\n              easily move between pages. This library allows for multiple pages\r\n              in the application. Separating actions and information in\r\n              different pages improves the flow of the application. A benefit of\r\n              this separation is the minimisation of the amount of information\r\n              users have to process at a time.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">D3.js</Typography>\r\n            <Typography variant=\"body1\">\r\n              D3.js: this JavaScript library is a very powerful tool to bring\r\n              the data to life with interactive graphs as well as manipulating\r\n              DOM elements. Using the data restored in Firebase cloud service\r\n              shows an overview of the average score for each suburb using\r\n              postcodes from user inputs. This leaderboard also graph shows the\r\n              total number of participants from each suburb to explain the\r\n              differences more clearly.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UI;\r\n","import React from \"react\";\r\nimport useStyle from \"../styles\";\r\nimport { Grid, Typography, Link } from \"@material-ui/core\";\r\nimport YouTubeEmbed from \"../YouTubeEmbed\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../store\";\r\n\r\nfunction UX(): React.ReactElement {\r\n  const classes = useStyle();\r\n  const {\r\n    screenAction: { gridRowToReverce, gridRowToColumn },\r\n  } = useSelector((state: RootState) => state);\r\n  const preventDefault = (\r\n    event:\r\n      | React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n      | React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n  ) => event.preventDefault();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        // spacing={4}\r\n        justify=\"space-between\"\r\n        alignContent=\"flex-start\"\r\n        className={classes.topic_grid}\r\n      >\r\n        <Grid item lg={6} md={12} className={classes.topick_heading}>\r\n          <Typography variant=\"h3\">\r\n            User Experience Case Studies. Environmental Conservation.\r\n          </Typography>\r\n          <Typography variant=\"h4\">Collaboration Team:</Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{ fontSize: \"12px\", color: \"#426164\" }}\r\n          >\r\n            User Journey Map & Documentation: Mohammad Amin Mohammadi\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{ fontSize: \"12px\", color: \"#426164\" }}\r\n          >\r\n            User Testings & Video: Brendan O'Reilly\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{ fontSize: \"12px\", color: \"#426164\" }}\r\n          >\r\n            Synthesizing Activity Design: Elliott Magrath\r\n          </Typography>\r\n          <Link\r\n            href=\"images/Pages/UX/Visual-Report.pdf\"\r\n            className={classes.onlineLink}\r\n            style={{ bottom: \"0px\" }}\r\n            onClick={(e) => preventDefault}\r\n          >\r\n            <Typography variant=\"h5\" className={classes.link_ToExternals}>\r\n              Link to full report\r\n            </Typography>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item lg={6} md={12} className={classes.topic_pragraph}>\r\n          <Typography variant=\"body1\">\r\n            Technology has played a significant role in increasing the world\r\n            population dramatically. Consequently it has increased the level of\r\n            the complexity of problems. However, user research methods developed\r\n            around design frameworks can be a powerful tool to face these\r\n            complex wicked problems. since the day I was introduced to the\r\n            digital world, I have always been looking and thinking beyond the\r\n            applications and platforms I have used. The temptation to find\r\n            reliable solutions to build a better future for both humanity and\r\n            the environment we live at.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <YouTubeEmbed embedID=\"AikAa-n8vq8\" />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction={gridRowToReverce}\r\n          spacing={4}\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"body1\">\r\n              Currently our planet is at a critical point of animal extinction\r\n              and bidovirsty loss. To aid in combatting this loss we have\r\n              designed the Atmoscube. Through research conducted at the\r\n              beginning of the design process we’ve identified that people often\r\n              feel unempowered in their ability to help the environment. To\r\n              solve this problem, we have aimed to create an experience that\r\n              informs and engages the user in an effort to educate and empower.\r\n              Empowerment provided by interacting with the atomscube is designed\r\n              to permeate throughout the users daily life, providing them with a\r\n              platform to continue with environmentally positive life choices.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">\r\n              Knowledge As a tool to conserve\r\n            </Typography>\r\n            <Typography variant=\"h3\">Environment and Biodiversity</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          container\r\n          direction={gridRowToColumn}\r\n          spacing={4}\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">What is the strategy?</Typography>\r\n            <Typography variant=\"h3\">Design Solution</Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"body1\">\r\n              Our design Solution is the Atmoscube, a cube roughly 450mm in\r\n              width, height and depth. Within this hologram cube we are propose\r\n              a city build game. The top of the product houses a touch and\r\n              distance sensitive interface that along with AI voice operated\r\n              system will be the way in which the user engages with the product.\r\n              Within the product will be a small AR city projected from the\r\n              base, this AR city will be built and managed by the user.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <img src=\"images/Pages/UX/Render.png\" alt=\"content\" />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction={gridRowToReverce}\r\n          spacing={4}\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"body1\">\r\n              The design process was guided by the aim of empowering people\r\n              through education in an effort to aid against biodiversity loss\r\n              and animal extinction.\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body1\">\r\n              Stage one of the design process involved conducting research with\r\n              finding key insights regarding the problem space in mind.\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body1\">\r\n              Stage two of the process involved studying the research gathered,\r\n              finding explicit and intrinsic insights into solutions for the\r\n              problem space.\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body1\">\r\n              Stage Three involved each design member submitting two idea and\r\n              subsequent storyboards that aided the problem space and\r\n              successfully met design criteria.\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body1\">\r\n              Stage Four involved each design team members idea being inputted\r\n              into a design matrix created to highlight the best design and what\r\n              was most suited to the tasks needs.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">Trial and Error</Typography>\r\n            <Typography variant=\"h3\">Design Process</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <img src=\"images/Pages/UX/Render-2.png\" alt=\"content\" />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          spacing={4}\r\n          direction={gridRowToReverce}\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.inner_GridContainer}\r\n        >\r\n          <Grid item lg={6} md={12}>\r\n            To use the Atmoscube the user must connect it to its home and\r\n            vehicles IoT (Internet of things), the data received from the users\r\n            amenities will be the core of the users experience within atmoscube,\r\n            the electricity, water and Co2 used by the user within their real\r\n            daily lives will have a direct effect to their experience within the\r\n            product. An example of this is smog within the user’s city from high\r\n            Co2 emissions or Electricity use in real life.\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <img src=\"images/Pages/UX/Render-3.png\" alt=\"content\" />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            spacing={4}\r\n            direction={gridRowToColumn}\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.inner_GridContainer}\r\n          >\r\n            <Grid item lg={6} md={12}>\r\n              <img src=\"images/Pages/UX/Render-4.png\" alt=\"content\" />\r\n            </Grid>\r\n            <Grid item lg={6} md={12}>\r\n              To accompany these mechanics is the systems AI, with the gathered\r\n              data from the users IoT the AI will learn the user’s habits,\r\n              lifestyle and how they could lower their impact on the\r\n              environment. These improvements will be set to the user as\r\n              challenges, these challenges were designed with gamification in\r\n              mind, engaging the user and investing them in the experience as a\r\n              whole.\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          spacing={4}\r\n          xs={12}\r\n          style={{ paddingTop: \"160px\" }}\r\n        >\r\n          <Grid item lg={6} md={12}>\r\n            <Typography variant=\"h5\">Design Communicatin Tool</Typography>\r\n            <Typography variant=\"h3\">User Journy Map</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} style={{ paddingTop: \"12px\" }}>\r\n            <Link\r\n              href=\"images/Pages/UX/(Icon-Discription-Headings)Jourenny-Map(Custom-Size-Cancas).jpg\"\r\n              className={classes.onlineLink}\r\n              style={{ bottom: \"0px\" }}\r\n              onClick={(e) => preventDefault}\r\n            >\r\n              <img\r\n                src=\"images/Pages/UX/(Icon-Discription-Headings)Jourenny-Map(Custom-Size-Cancas).jpg\"\r\n                alt=\"content\"\r\n              />\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UX;\r\n","import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport useStyle from '../styles'\r\n\r\n\r\nfunction Undeveloped(): React.ReactElement {\r\n    const classes=useStyle();\r\n    return (\r\n        <div>\r\n            <Typography variant='h3' className={classes.topick_heading}>\r\n                This page is temporary unavailable.\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Undeveloped\r\n","import React from 'react'\r\nimport useStyle from '../styles'\r\nimport useMeasure from \"react-use-measure\";\r\n\r\ninterface Props {\r\n  embedID: string\r\n}\r\n\r\nfunction YouTubeEmbed({ embedID }: Props): React.ReactElement {\r\n  const classes = useStyle();\r\n  const [videoContainer, {width}]=useMeasure();\r\n  return (\r\n    <div className={classes.video_container} ref={videoContainer}>\r\n      <div className={classes.video_root}>\r\n        <div className={classes.video_responsive}>\r\n          <iframe\r\n            width=\"100%\"\r\n            height= {width/2}\r\n            src={`https://www.youtube.com/embed/${embedID}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Embedded youtube\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default YouTubeEmbed\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexFlow: \"row-reverse\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    transition: \"transform 1s ease-in\",\r\n    marginLeft: 0,\r\n    marginRight: \"auto\",\r\n    direction: \"ltr\",\r\n  },\r\n  topic_grid: {\r\n    color: \"white\",\r\n    '& > .MuiGrid-item img': {\r\n      width: '100%'\r\n    },\r\n    '&>*': {\r\n      padding: theme.spacing(4)\r\n    },\r\n    '&>*:nth-child(n+4)': {\r\n      paddingTop: theme.spacing(20)\r\n    },\r\n  },\r\n  topick_heading: {\r\n    color: \"white\",\r\n    \"& >*:not(:first-child)\": {\r\n      paddingTop: \"8px\",\r\n    },\r\n  },\r\n  onlineLink: {},\r\n  link_ToExternals: {\r\n    color: \"#5C3B42\",\r\n  },\r\n  inner_GridContainer: {\r\n    '& > *': {\r\n      paddingTop: theme.spacing(10)\r\n    }\r\n  },\r\n  topic_pragraph: {},\r\n  video_container:{\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    zIndex: -1,\r\n  },\r\n  video_root: {\r\n    width: '100%',\r\n    position: 'relative',\r\n  },\r\n  video_responsive: {\r\n    overflow: 'hidden',\r\n    /* 16:9*/\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  divider:{\r\n    backgroundColor: 'white !important'\r\n  }\r\n}));\r\n\r\nexport default useStyle;\r\n","module.exports = require(\"@material-ui/core/Divider\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/LinearProgress\");","module.exports = require(\"@material-ui/core/Link\");","module.exports = require(\"@material-ui/core/Slide\");","module.exports = require(\"@material-ui/core/Snackbar\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/core/useMediaQuery\");","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"axios\");","module.exports = require(\"express\");","module.exports = require(\"react\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-use-measure\");","module.exports = require(\"reload\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from \"express\";\r\nimport React from \"react\";\r\nimport { renderToString } from \"react-dom/server\";\r\nimport reload from \"reload\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport {\r\n  ServerStyleSheets,\r\n  StylesProvider,\r\n  createGenerateClassName,\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst app = express();\r\n\r\nconst port = 3000;\r\n\r\nconst dev = process.env.NODE_ENV === \"development\";\r\n\r\napp.use(express.static(\"public\"));\r\n\r\nif (dev) reload(app);\r\n\r\napp.use((rec, res) => {\r\n  const styleSheetsRegistry = new ServerStyleSheets();\r\n  const generateClassName = createGenerateClassName({\r\n    productionPrefix: \"c\",\r\n  });\r\n\r\n  const html = renderToString(\r\n    styleSheetsRegistry.collect(\r\n      <StylesProvider generateClassName={generateClassName}>\r\n        <Provider store={store}>\r\n          <App />\r\n        </Provider>\r\n      </StylesProvider>\r\n    )\r\n  );\r\n\r\n  const css = styleSheetsRegistry.toString();\r\n  const preloadedState = store.getState();\r\n\r\n  res.send(`\r\n    <!DOCTYPE html>\r\n<html lang='en'>\r\n  <head>\r\n    <meta charset='utf-8' />\r\n    <link rel='icon' href='./favicon.ico' />\r\n    <meta name='viewport' content='width=device-width, initial-scale=1' />\r\n    <title>Andramedian Design-Mohammad Amin Mohammadi</title>\r\n    <style id='jss-style'>${css}</style>\r\n  </head>\r\n  <body>\r\n    <div id='root'>${html}</div>\r\n    <script async>\r\n    window.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(\r\n      /</g,\r\n      \"\\\\u003c\"\r\n    )}\r\n  </script>\r\n    <script src='main.js' async></script>\r\n    ${dev ? `<script src='/reload/reload.js async></script>` : \"\"}\r\n  </body>\r\n</html>\r\n    `);\r\n});\r\n\r\napp.listen(port, () => console.log(`http://localhost:${port}`));\r\n"],"names":[],"sourceRoot":""}